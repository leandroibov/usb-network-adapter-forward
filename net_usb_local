#!/bin/bash
echo "";
echo "";
echo "Checking modules for external interface";
echo "lsmod | grep r8152";
lsmod | grep r8152
echo "";
echo "Activating modules for external interface r8152";
echo "sudo modprobe r8152";
sudo modprobe r8152
echo "";
echo "Checking if your external interface is recognized";
echo "lsusb";
lsusb


echo "";
# Ask the user if they want to proceed or exit
echo "Do you want to continue or exit? (c for continue, e for exit)"
read choice

# Check the user's choice
if [ "$choice" == "c" ]; then
    echo "Continuing the program..."
    echo "";
    # Add further commands to continue the program
    # Example: 
    # lsusb
    # or any other logic to proceed with the program
elif [ "$choice" == "e" ]; then
    echo "Exiting the program..."
    exit 0
    echo "";
else
    echo "Invalid input, please enter 'c' to continue or 'e' to exit."
    # Optionally, loop the question or terminate
    exit 1
    echo "";
fi



echo "List of network interfaces, bridges, vlans etc... and connections with uuid";

# Listing all network interfaces using the ip command
echo "-----------------------------------------------";
interfaces=$(ip link show | grep -oP '^\d+: \K\w+')

# Displaying the interfaces in a single line
echo "$interfaces"
echo;
echo "nmcli connection show";
nmcli connection show
echo "-----------------------------------------------";
echo;

# Ask if the desired interface connection exists
echo "Does the connection for the desired interface exist?"
read -rp "Do you want to create a connection and set up a auto dhcp method for the device? (yes/no): " create_connection

if [[ "$create_connection" == "yes" ]]; then
    # Ask for the connection name
    read -rp "Enter the connection name: " con_name
    # Ask for the interface name
    read -rp "Enter the name of your interface: " interface
    echo "The chosen interface is: $interface"
    
    # Create the connection with auto IPv4 method
    echo "Creating connection with the name $con_name and setting IPv4 method to auto..."
    echo "sudo nmcli connection add type ethernet con-name "$con_name" ifname "$interface" ipv4.method auto";
    sudo nmcli connection add type ethernet con-name "$con_name" ifname "$interface" ipv4.method auto

    # Modify the connection (optional, if you want to ensure the change)
    #echo "Setting the interface $interface to forward the connection (auto)..."
    #sudo nmcli connection modify "$interface" ipv4.method auto
else
    # If the connection already exists, configure the interface directly
    echo "You chose not to create a new connection."
    
    # Ask for the external interface name
    read -rp "Enter the name of UUID of your USB external interface: " interface
    echo "The chosen interface is: $interface"
    
    # Configuring the external interface for auto dhcp method
    echo "Configuring the external interface $interface to forward connection to the outside (FORWARD)..."
    echo "sudo nmcli connection modify "$interface" ipv4.method auto"
    sudo nmcli connection modify "$interface" ipv4.method auto
fi

echo "deleting all iptables rules..."
sudo iptables -F  # Remove as regras de todas as chains
sudo iptables -X  # Apaga todas as chains
sudo iptables -Z  # Zera as regras de todas as chains

sudo iptables -P INPUT ACCEPT;
sudo iptables -P FORWARD ACCEPT;
sudo iptables -P OUTPUT ACCEPT;

sudo iptables -t filter -F;
sudo iptables -t filter -X;
sudo iptables -t filter -Z;

sudo iptables -t nat -F;
sudo iptables -t nat -X;
sudo iptables -t nat -Z;

sudo iptables -t mangle -F;
sudo iptables -t mangle -X;
sudo iptables -t mangle -Z;


sudo iptables -t raw -F;
sudo iptables -t raw -X;
sudo iptables -t raw -Z;


sudo echo "";


echo "configuring block_input iptables rules (basic firewall linux)..."
# Definindo políticas padrões
######################
sudo iptables  -P  INPUT DROP  # iptables a política padrão da chain INPUT é proibir tudo
sudo iptables  -P  FORWARD DROP
sudo iptables  -P  OUTPUT ACCEPT


# Liberando a Loopback
####################
sudo iptables -A  INPUT -i lo -j ACCEPT
sudo iptables -A  FORWARD -i lo -j DROP

## Regras de segurança na internet e acessos
## ethx tem que mudar, use ifconfig e cheque qual é, no caso ether
#####################################
sudo iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
sudo iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j DROP

#Bloqueando novas conexões e conexões invalidas após ter a conexão estabelecida e relatada
sudo iptables -A INPUT -m state --state INVALID -j DROP
sudo iptables -A FORWARD -m state --state INVALID -j DROP
sudo iptables -A INPUT -m state --state NEW -j DROP

#SOMENTE PCS DENTRO DA REDE PODEM SE CONECTAR
sudo iptables -A INPUT -p tcp --syn -s 192.168.0.0/255.255.255.0 -j ACCEPT;
sudo iptables -A INPUT -p tcp --syn -j DROP;
sudo iptables -A INPUT -i ppp0 -p udp --dport 0:30000 -j DROP;

sudo echo "";

echo "";
sudo echo "Restarting network...";
sudo echo "";
sudo service network-manager stop; 
sudo service network-manager start; 
sudo service network-manager restart; 
sudo systemctl stop NetworkManager;
sudo systemctl disable NetworkManager;
sudo systemctl enable NetworkManager;
sudo systemctl start NetworkManager;

echo "";
#iptables rules new list
sudo echo "";
echo "############################ List Iptable Rules ############################"
sudo echo "";
sudo echo "############################ Table Filter ############################";
sudo iptables -t filter -S;
sudo echo "";

sudo echo "############################ Table Nat ############################";
sudo iptables -t nat -S;
sudo echo "";

sudo echo "############################ Table Mangle ############################";
sudo iptables -t mangle -S;
sudo echo "";

sudo echo "############################ Table Raw ############################";
sudo iptables -t raw -S;
sudo echo "############################ End... ############################";
sudo echo "";

echo "-------------------------------------------------------------------------------------";
echo "Reboot the system if is not working";
echo "-------------------------------------------------------------------------------------";
echo;
















